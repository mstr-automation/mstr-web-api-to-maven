plugins {
  id 'com.github.johnrengelman.shadow' version '5.0.0'
  id 'java'
  id 'maven-publish'
}

group = 'unofficial.com.microstrategy'

processResources {
    from(zipTree("src/resources/MicroStrategy.war")) {
        include "WEB-INF/lib/*.jar"
        exclude "WEB-INF/lib/mstr-saml.jar"
        exclude "WEB-INF/lib/Certificate*.jar"
        eachFile { f ->
            f.relativePath = new RelativePath(true, f.relativePath.segments.drop(2)) 
        }
        includeEmptyDirs = false
    }
}

shadowJar {
  classifier = null
}

task extractLibraryJar(type: Copy) {
  from(zipTree("src/resources/MicroStrategyLibrary.war")) 
  include "WEB-INF/lib/restful-api-1.0-SNAPSHOT-jar-with-dependencies.jar"
  into project.buildDir
}

publishing {
  publications {
    shadow(MavenPublication) { publication ->
        artifactId = 'microstrategy-web-api'
        artifact shadowJar
                version = mstrVersion

    }
    mstrWeb(MavenPublication) { publication -> 
        artifact "src/resources/MicroStrategy.war"
        artifactId = "microstrategy-web-application"
        version = mstrVersion
    }    
    mstrLibrary(MavenPublication) { publication -> 
        artifact "src/resources/MicroStrategyLibrary.war"
        artifactId = "microstrategy-library-application"
        version = mstrVersion
    }
    mstrCommunityConnectors(MavenPublication) { publication -> 
        artifact "src/resources/CommunityConnectors.war"
        artifactId = "microstrategy-community-connectors"
        version = mstrVersion
    }
    mstrWebServices(MavenPublication) { publication -> 
        artifact "src/resources/MicroStrategyWS.war"
        artifactId = "microstrategy-web-services"
        version = mstrVersion
    }
    mstrLibraryApi(MavenPublication) { publication ->
      artifact "${project.buildDir}/WEB-INF/lib/restful-api-1.0-SNAPSHOT-jar-with-dependencies.jar"
      artifactId = "microstrategy-library-api"
      version = mstrVersion
    }
  }
  repositories {
    maven {
      url nexusRepoURL
      credentials {
          username = nexusUsername
          password = nexusPassword
      }
    }
  }
}

publishMstrLibraryApiPublicationToMavenRepository {
  dependsOn 'extractLibraryJar'
}